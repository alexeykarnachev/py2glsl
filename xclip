============================= test session starts ==============================
platform linux -- Python 3.13.1, pytest-8.3.4, pluggy-1.5.0
rootdir: /home/akarnachev/proj/py2glsl
configfile: pyproject.toml
plugins: asyncio-0.25.3, cov-6.0.0
asyncio: mode=Mode.AUTO, asyncio_default_fixture_loop_scope=function
collected 101 items

tests/render/test_buffers.py ..F                                         [  2%]
tests/render/test_context.py .FF.F.FX                                    [ 10%]
tests/shaders/test_basic_shaders.py FFF                                  [ 13%]
tests/transpiler/test_analyzer.py .............                          [ 26%]
tests/transpiler/test_generator.py .........F.                           [ 37%]
tests/types/test_constructors.py ...................                     [ 56%]
tests/types/test_system.py ........................                      [ 80%]
tests/types/test_validation.py ....................                      [100%]

=================================== FAILURES ===================================
_____________________________ test_invalid_program _____________________________

    def test_invalid_program():
        """Test error handling with invalid shader program."""
        with create_standalone_context() as ctx:
            buffer = create_quad_buffer(ctx)
    
            # Create program with invalid attribute names
>           program = ctx.program(
                vertex_shader="""
                    #version 460
                    in vec2 wrong_pos;  # Wrong attribute name
                    in vec2 wrong_uv;   # Wrong attribute name
                    void main() {
                        gl_Position = vec4(wrong_pos, 0.0, 1.0);
                    }
                """,
                fragment_shader="""
                    #version 460
                    out vec4 f_color;
                    void main() {
                        f_color = vec4(1.0);
                    }
                """,
            )

tests/render/test_buffers.py:89: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <moderngl.Context object at 0x7f0a4f98ad50>
vertex_shader = '#version 460\n                in vec2 wrong_pos;  # Wrong attribute name\n                in vec2 wrong_uv;   # Wrong...e name\n                void main() {\n                    gl_Position = vec4(wrong_pos, 0.0, 1.0);\n                }'
fragment_shader = '#version 460\n                out vec4 f_color;\n                void main() {\n                    f_color = vec4(1.0);\n                }'
geometry_shader = None, tess_control_shader = None
tess_evaluation_shader = None, varyings = (), fragment_outputs = {}
attributes = None, varyings_capture_mode = 'interleaved'

    def program(
        self,
        vertex_shader=None,
        fragment_shader=None,
        geometry_shader=None,
        tess_control_shader=None,
        tess_evaluation_shader=None,
        varyings=(),
        fragment_outputs=None,
        attributes=None,
        varyings_capture_mode="interleaved",
    ):
        if varyings_capture_mode not in ("interleaved", "separate"):
            raise ValueError("varyings_capture_mode must be interleaved or separate")
    
        if type(varyings) is str:
            varyings = (varyings,)
    
        varyings = tuple(varyings)
    
        if fragment_outputs is None:
            fragment_outputs = {}
    
        if isinstance(vertex_shader, str):
            vertex_shader = vertex_shader.strip()
    
        if isinstance(fragment_shader, str):
            fragment_shader = fragment_shader.strip()
    
        res = Program.__new__(Program)
>       res.mglo, _members, res._subroutines, res._geom, res._glo = self.mglo.program(
            vertex_shader,
            fragment_shader,
            geometry_shader,
            tess_control_shader,
            tess_evaluation_shader,
            None,
            varyings,
            fragment_outputs,
            varyings_capture_mode == "interleaved",
        )
E       _moderngl.Error: GLSL Compiler failed
E       
E       vertex_shader
E       =============
E       0:2(37): preprocessor error: syntax error, unexpected HASH_TOKEN

.venv/lib/python3.13/site-packages/moderngl/__init__.py:1978: Error
_________________________ test_window_context_creation _________________________

    def test_window_context_creation():
        """Test window context creation."""
>       with create_window_context(title="Test Window") as (ctx, window):
E       TypeError: create_window_context() missing 1 required positional argument: 'size'

tests/render/test_context.py:24: TypeError
___________________________ test_invalid_gl_version ____________________________

    def test_invalid_gl_version():
        """Test context creation with invalid OpenGL version."""
        config = GLConfig(major_version=9, minor_version=9)  # Invalid version
>       with pytest.raises(GLContextError):
E       Failed: DID NOT RAISE <class 'py2glsl.render.context.GLContextError'>

tests/render/test_context.py:33: Failed
____________________________ test_framebuffer_size _____________________________

    def test_framebuffer_size():
        """Test framebuffer size retrieval."""
        size = (640, 480)
>       with create_window_context(size=size) as (_, window):
E       TypeError: 'tuple' object does not support the context manager protocol

tests/render/test_context.py:56: TypeError
______________________________ test_custom_config ______________________________

    def test_custom_config():
        """Test custom OpenGL configuration."""
>       config = GLConfig(
            major_version=4,
            minor_version=6,
            samples=8,
            vsync=False,
            debug=True,
        )
E       TypeError: GLConfig.__init__() got an unexpected keyword argument 'debug'

tests/render/test_context.py:88: TypeError
_______________________________ test_solid_color _______________________________

tmp_path = PosixPath('/tmp/pytest-of-akarnachev/pytest-24/test_solid_color0')

    def test_solid_color(tmp_path):
        """Test basic solid color shader."""
    
        def solid_color(vs_uv: vec2, *, u_color: vec4) -> vec4:
            return u_color
    
>       verify_shader_output(
            shader_func=solid_color,
            test_name="solid_color",
            tmp_path=tmp_path,
            uniforms={"u_color": (1.0, 0.0, 0.0, 1.0)},  # Pure red
        )

tests/shaders/test_basic_shaders.py:14: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/shaders/utils.py:38: in verify_shader_output
    result = render_image(shader_func, size=size, **uniforms)
py2glsl/render/render.py:67: in render_image
    data = render_array(shader_func, size, **uniforms)
py2glsl/render/render.py:32: in render_array
    program["u_aspect"].value = u_aspect
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <moderngl.Program object at 0x7f0a38c302b0>, key = 'u_aspect'

    def __getitem__(self, key):
>       return self._members[key]
E       KeyError: 'u_aspect'

.venv/lib/python3.13/site-packages/moderngl/__init__.py:412: KeyError
----------------------------- Captured stderr call -----------------------------
2025-02-13 19:57:44.039 | DEBUG    | py2glsl.transpiler.analyzer:analyze:559 - Starting shader analysis
2025-02-13 19:57:44.039 | DEBUG    | py2glsl.transpiler.analyzer:analyze_function_def:761 - Analyzing function: solid_color
2025-02-13 19:57:44.040 | DEBUG    | py2glsl.transpiler.analyzer:register_variable:816 - Registering variable vs_uv of type vec2
2025-02-13 19:57:44.040 | DEBUG    | py2glsl.types.base:__post_init__:116 - Validating GLSLType: uniform vec4
2025-02-13 19:57:44.040 | DEBUG    | py2glsl.transpiler.analyzer:analyze_statement:597 - Analyzing statement: Return(value=Name(id='u_color', ctx=Load()))
2025-02-13 19:57:44.040 | DEBUG    | py2glsl.transpiler.analyzer:infer_type:162 - Inferring type for node: Name(id='u_color', ctx=Load())
2025-02-13 19:57:44.040 | DEBUG    | py2glsl.types.validation:can_convert_to:174 - Checking conversion from uniform vec4 to vec4
2025-02-13 19:57:44.040 | DEBUG    | py2glsl.transpiler.generator:generate:751 - Starting GLSL code generation
2025-02-13 19:57:44.040 | DEBUG    | py2glsl.types.validation:can_convert_to:174 - Checking conversion from uniform vec4 to vec4
____________________________ test_uv_visualization _____________________________

tmp_path = PosixPath('/tmp/pytest-of-akarnachev/pytest-24/test_uv_visualization0')

    def test_uv_visualization(tmp_path):
        """Test UV coordinate visualization."""
    
        def uv_vis(vs_uv: vec2) -> vec4:
            return vec4(vs_uv.x, vs_uv.y, 0.0, 1.0)
    
>       verify_shader_output(
            shader_func=uv_vis,
            test_name="uv_visualization",
            tmp_path=tmp_path,
        )

tests/shaders/test_basic_shaders.py:28: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/shaders/utils.py:38: in verify_shader_output
    result = render_image(shader_func, size=size, **uniforms)
py2glsl/render/render.py:67: in render_image
    data = render_array(shader_func, size, **uniforms)
py2glsl/render/render.py:32: in render_array
    program["u_aspect"].value = u_aspect
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <moderngl.Program object at 0x7f0a3938fe10>, key = 'u_aspect'

    def __getitem__(self, key):
>       return self._members[key]
E       KeyError: 'u_aspect'

.venv/lib/python3.13/site-packages/moderngl/__init__.py:412: KeyError
----------------------------- Captured stderr call -----------------------------
2025-02-13 19:57:44.097 | DEBUG    | py2glsl.transpiler.analyzer:analyze:559 - Starting shader analysis
2025-02-13 19:57:44.098 | DEBUG    | py2glsl.transpiler.analyzer:analyze_function_def:761 - Analyzing function: uv_vis
2025-02-13 19:57:44.098 | DEBUG    | py2glsl.transpiler.analyzer:register_variable:816 - Registering variable vs_uv of type vec2
2025-02-13 19:57:44.098 | DEBUG    | py2glsl.transpiler.analyzer:analyze_statement:597 - Analyzing statement: Return(value=Call(func=Name(id='vec4', ctx=Load()), args=[Attribute(value=Name(id='vs_uv', ctx=Load()), attr='x', ctx=Load()), Attribute(value=Name(id='vs_uv', ctx=Load()), attr='y', ctx=Load()), Constant(value=0.0), Constant(value=1.0)]))
2025-02-13 19:57:44.098 | DEBUG    | py2glsl.transpiler.analyzer:infer_type:162 - Inferring type for node: Call(func=Name(id='vec4', ctx=Load()), args=[Attribute(value=Name(id='vs_uv', ctx=Load()), attr='x', ctx=Load()), Attribute(value=Name(id='vs_uv', ctx=Load()), attr='y', ctx=Load()), Constant(value=0.0), Constant(value=1.0)])
2025-02-13 19:57:44.098 | DEBUG    | py2glsl.transpiler.analyzer:infer_type:162 - Inferring type for node: Attribute(value=Name(id='vs_uv', ctx=Load()), attr='x', ctx=Load())
2025-02-13 19:57:44.098 | DEBUG    | py2glsl.transpiler.analyzer:infer_type:162 - Inferring type for node: Name(id='vs_uv', ctx=Load())
2025-02-13 19:57:44.098 | DEBUG    | py2glsl.types.base:validate_swizzle:216 - Validating swizzle: vec2.x
2025-02-13 19:57:44.098 | DEBUG    | py2glsl.types.base:validate_swizzle:234 - Component set: {'x'}
2025-02-13 19:57:44.098 | DEBUG    | py2glsl.types.base:__post_init__:116 - Validating GLSLType: float
2025-02-13 19:57:44.098 | DEBUG    | py2glsl.transpiler.analyzer:infer_type:162 - Inferring type for node: Attribute(value=Name(id='vs_uv', ctx=Load()), attr='y', ctx=Load())
2025-02-13 19:57:44.098 | DEBUG    | py2glsl.transpiler.analyzer:infer_type:162 - Inferring type for node: Name(id='vs_uv', ctx=Load())
2025-02-13 19:57:44.098 | DEBUG    | py2glsl.types.base:validate_swizzle:216 - Validating swizzle: vec2.y
2025-02-13 19:57:44.098 | DEBUG    | py2glsl.types.base:validate_swizzle:234 - Component set: {'y'}
2025-02-13 19:57:44.098 | DEBUG    | py2glsl.types.base:__post_init__:116 - Validating GLSLType: float
2025-02-13 19:57:44.098 | DEBUG    | py2glsl.transpiler.analyzer:infer_type:162 - Inferring type for node: Constant(value=0.0)
2025-02-13 19:57:44.098 | DEBUG    | py2glsl.transpiler.analyzer:infer_type:162 - Inferring type for node: Constant(value=1.0)
2025-02-13 19:57:44.098 | DEBUG    | py2glsl.types.validation:can_convert_to:174 - Checking conversion from vec4 to vec4
2025-02-13 19:57:44.098 | DEBUG    | py2glsl.transpiler.generator:generate:751 - Starting GLSL code generation
2025-02-13 19:57:44.098 | DEBUG    | py2glsl.types.validation:can_convert_to:174 - Checking conversion from vec4 to vec4
2025-02-13 19:57:44.098 | DEBUG    | py2glsl.transpiler.generator:_generate_call:275 - Generating call for function: vec4
2025-02-13 19:57:44.098 | DEBUG    | py2glsl.types.base:validate_swizzle:216 - Validating swizzle: vec2.x
2025-02-13 19:57:44.098 | DEBUG    | py2glsl.types.base:validate_swizzle:234 - Component set: {'x'}
2025-02-13 19:57:44.098 | DEBUG    | py2glsl.types.base:__post_init__:116 - Validating GLSLType: float
2025-02-13 19:57:44.098 | DEBUG    | py2glsl.types.base:validate_swizzle:216 - Validating swizzle: vec2.y
2025-02-13 19:57:44.098 | DEBUG    | py2glsl.types.base:validate_swizzle:234 - Component set: {'y'}
2025-02-13 19:57:44.098 | DEBUG    | py2glsl.types.base:__post_init__:116 - Validating GLSLType: float
2025-02-13 19:57:44.098 | DEBUG    | py2glsl.types.base:validate_swizzle:216 - Validating swizzle: vec2.x
2025-02-13 19:57:44.098 | DEBUG    | py2glsl.types.base:validate_swizzle:234 - Component set: {'x'}
2025-02-13 19:57:44.098 | DEBUG    | py2glsl.types.base:__post_init__:116 - Validating GLSLType: float
2025-02-13 19:57:44.098 | DEBUG    | py2glsl.types.base:validate_swizzle:216 - Validating swizzle: vec2.y
2025-02-13 19:57:44.098 | DEBUG    | py2glsl.types.base:validate_swizzle:234 - Component set: {'y'}
2025-02-13 19:57:44.098 | DEBUG    | py2glsl.types.base:__post_init__:116 - Validating GLSLType: float
2025-02-13 19:57:44.099 | DEBUG    | py2glsl.types.base:validate_swizzle:216 - Validating swizzle: vec2.x
2025-02-13 19:57:44.099 | DEBUG    | py2glsl.types.base:validate_swizzle:234 - Component set: {'x'}
2025-02-13 19:57:44.099 | DEBUG    | py2glsl.types.base:__post_init__:116 - Validating GLSLType: float
2025-02-13 19:57:44.099 | DEBUG    | py2glsl.types.base:validate_swizzle:216 - Validating swizzle: vec2.y
2025-02-13 19:57:44.099 | DEBUG    | py2glsl.types.base:validate_swizzle:234 - Component set: {'y'}
2025-02-13 19:57:44.099 | DEBUG    | py2glsl.types.base:__post_init__:116 - Validating GLSLType: float
____________________________ test_animated_pattern _____________________________

tmp_path = PosixPath('/tmp/pytest-of-akarnachev/pytest-24/test_animated_pattern0')

    def test_animated_pattern(tmp_path):
        """Test animated pattern with time uniform."""
    
        def animated(vs_uv: vec2, *, u_time: float) -> vec4:
            # Center UVs
            uv = vs_uv * 2.0 - 1.0
    
            # Create animated circular pattern
            d = math.sqrt(uv.x * uv.x + uv.y * uv.y)
            pattern = math.sin(d * 10.0 - u_time * 2.0) * 0.5 + 0.5
    
            return vec4(pattern, pattern * 0.5, 1.0 - pattern, 1.0)
    
>       verify_shader_output(
            shader_func=animated,
            test_name="animated_pattern",
            tmp_path=tmp_path,
            uniforms={"u_time": 1.234},  # Fixed time for reproducible output
        )

tests/shaders/test_basic_shaders.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/shaders/utils.py:38: in verify_shader_output
    result = render_image(shader_func, size=size, **uniforms)
py2glsl/render/render.py:67: in render_image
    data = render_array(shader_func, size, **uniforms)
py2glsl/render/render.py:32: in render_array
    program["u_aspect"].value = u_aspect
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <moderngl.Program object at 0x7f0a39250ef0>, key = 'u_aspect'

    def __getitem__(self, key):
>       return self._members[key]
E       KeyError: 'u_aspect'

.venv/lib/python3.13/site-packages/moderngl/__init__.py:412: KeyError
----------------------------- Captured stderr call -----------------------------
2025-02-13 19:57:44.155 | DEBUG    | py2glsl.transpiler.analyzer:analyze:559 - Starting shader analysis
2025-02-13 19:57:44.156 | DEBUG    | py2glsl.transpiler.analyzer:analyze_function_def:761 - Analyzing function: animated
2025-02-13 19:57:44.156 | DEBUG    | py2glsl.transpiler.analyzer:register_variable:816 - Registering variable vs_uv of type vec2
2025-02-13 19:57:44.156 | DEBUG    | py2glsl.types.base:__post_init__:116 - Validating GLSLType: uniform float
2025-02-13 19:57:44.156 | DEBUG    | py2glsl.transpiler.analyzer:analyze_statement:597 - Analyzing statement: Assign(targets=[Name(id='uv', ctx=Store())], value=BinOp(left=BinOp(left=Name(id='vs_uv', ctx=Load()), op=Mult(), right=Constant(value=2.0)), op=Sub(), right=Constant(value=1.0)))
2025-02-13 19:57:44.156 | DEBUG    | py2glsl.transpiler.analyzer:infer_type:162 - Inferring type for node: BinOp(left=BinOp(left=Name(id='vs_uv', ctx=Load()), op=Mult(), right=Constant(value=2.0)), op=Sub(), right=Constant(value=1.0))
2025-02-13 19:57:44.156 | DEBUG    | py2glsl.transpiler.analyzer:_infer_binary_operation:320 - Inferring binary operation: BinOp(left=BinOp(left=Name(id='vs_uv', ctx=Load()), op=Mult(), right=Constant(value=2.0)), op=Sub(), right=Constant(value=1.0))
2025-02-13 19:57:44.156 | DEBUG    | py2glsl.transpiler.analyzer:infer_type:162 - Inferring type for node: BinOp(left=Name(id='vs_uv', ctx=Load()), op=Mult(), right=Constant(value=2.0))
2025-02-13 19:57:44.156 | DEBUG    | py2glsl.transpiler.analyzer:_infer_binary_operation:320 - Inferring binary operation: BinOp(left=Name(id='vs_uv', ctx=Load()), op=Mult(), right=Constant(value=2.0))
2025-02-13 19:57:44.156 | DEBUG    | py2glsl.transpiler.analyzer:infer_type:162 - Inferring type for node: Name(id='vs_uv', ctx=Load())
2025-02-13 19:57:44.156 | DEBUG    | py2glsl.transpiler.analyzer:infer_type:162 - Inferring type for node: Constant(value=2.0)
2025-02-13 19:57:44.156 | DEBUG    | py2glsl.transpiler.analyzer:infer_type:162 - Inferring type for node: Constant(value=1.0)
2025-02-13 19:57:44.156 | DEBUG    | py2glsl.transpiler.analyzer:register_variable:816 - Registering variable uv of type vec2
2025-02-13 19:57:44.156 | DEBUG    | py2glsl.transpiler.analyzer:analyze_statement:597 - Analyzing statement: Assign(targets=[Name(id='d', ctx=Store())], value=Call(func=Attribute(value=Name(id='math', ctx=Load()), attr='sqrt', ctx=Load()), args=[BinOp(left=BinOp(left=Attribute(value=Name(id='uv', ctx=Load()), attr='x', ctx=Load()), op=Mult(), right=Attribute(value=Name(id='uv', ctx=Load()), attr='x', ctx=Load())), op=Add(), right=BinOp(left=Attribute(value=Name(id='uv', ctx=Load()), attr='y', ctx=Load()), op=Mult(), right=Attribute(value=Name(id='uv', ctx=Load()), attr='y', ctx=Load())))]))
2025-02-13 19:57:44.156 | DEBUG    | py2glsl.transpiler.analyzer:infer_type:162 - Inferring type for node: Call(func=Attribute(value=Name(id='math', ctx=Load()), attr='sqrt', ctx=Load()), args=[BinOp(left=BinOp(left=Attribute(value=Name(id='uv', ctx=Load()), attr='x', ctx=Load()), op=Mult(), right=Attribute(value=Name(id='uv', ctx=Load()), attr='x', ctx=Load())), op=Add(), right=BinOp(left=Attribute(value=Name(id='uv', ctx=Load()), attr='y', ctx=Load()), op=Mult(), right=Attribute(value=Name(id='uv', ctx=Load()), attr='y', ctx=Load())))])
2025-02-13 19:57:44.156 | DEBUG    | py2glsl.transpiler.analyzer:register_variable:816 - Registering variable d of type float
2025-02-13 19:57:44.156 | DEBUG    | py2glsl.transpiler.analyzer:analyze_statement:597 - Analyzing statement: Assign(targets=[Name(id='pattern', ctx=Store())], value=BinOp(left=BinOp(left=Call(func=Attribute(value=Name(id='math', ctx=Load()), attr='sin', ctx=Load()), args=[BinOp(left=BinOp(left=Name(id='d', ctx=Load()), op=Mult(), right=Constant(value=10.0)), op=Sub(), right=BinOp(left=Name(id='u_time', ctx=Load()), op=Mult(), right=Constant(value=2.0)))]), op=Mult(), right=Constant(value=0.5)), op=Add(), right=Constant(value=0.5)))
2025-02-13 19:57:44.156 | DEBUG    | py2glsl.transpiler.analyzer:infer_type:162 - Inferring type for node: BinOp(left=BinOp(left=Call(func=Attribute(value=Name(id='math', ctx=Load()), attr='sin', ctx=Load()), args=[BinOp(left=BinOp(left=Name(id='d', ctx=Load()), op=Mult(), right=Constant(value=10.0)), op=Sub(), right=BinOp(left=Name(id='u_time', ctx=Load()), op=Mult(), right=Constant(value=2.0)))]), op=Mult(), right=Constant(value=0.5)), op=Add(), right=Constant(value=0.5))
2025-02-13 19:57:44.156 | DEBUG    | py2glsl.transpiler.analyzer:_infer_binary_operation:320 - Inferring binary operation: BinOp(left=BinOp(left=Call(func=Attribute(value=Name(id='math', ctx=Load()), attr='sin', ctx=Load()), args=[BinOp(left=BinOp(left=Name(id='d', ctx=Load()), op=Mult(), right=Constant(value=10.0)), op=Sub(), right=BinOp(left=Name(id='u_time', ctx=Load()), op=Mult(), right=Constant(value=2.0)))]), op=Mult(), right=Constant(value=0.5)), op=Add(), right=Constant(value=0.5))
2025-02-13 19:57:44.156 | DEBUG    | py2glsl.transpiler.analyzer:infer_type:162 - Inferring type for node: BinOp(left=Call(func=Attribute(value=Name(id='math', ctx=Load()), attr='sin', ctx=Load()), args=[BinOp(left=BinOp(left=Name(id='d', ctx=Load()), op=Mult(), right=Constant(value=10.0)), op=Sub(), right=BinOp(left=Name(id='u_time', ctx=Load()), op=Mult(), right=Constant(value=2.0)))]), op=Mult(), right=Constant(value=0.5))
2025-02-13 19:57:44.156 | DEBUG    | py2glsl.transpiler.analyzer:_infer_binary_operation:320 - Inferring binary operation: BinOp(left=Call(func=Attribute(value=Name(id='math', ctx=Load()), attr='sin', ctx=Load()), args=[BinOp(left=BinOp(left=Name(id='d', ctx=Load()), op=Mult(), right=Constant(value=10.0)), op=Sub(), right=BinOp(left=Name(id='u_time', ctx=Load()), op=Mult(), right=Constant(value=2.0)))]), op=Mult(), right=Constant(value=0.5))
2025-02-13 19:57:44.156 | DEBUG    | py2glsl.transpiler.analyzer:infer_type:162 - Inferring type for node: Call(func=Attribute(value=Name(id='math', ctx=Load()), attr='sin', ctx=Load()), args=[BinOp(left=BinOp(left=Name(id='d', ctx=Load()), op=Mult(), right=Constant(value=10.0)), op=Sub(), right=BinOp(left=Name(id='u_time', ctx=Load()), op=Mult(), right=Constant(value=2.0)))])
2025-02-13 19:57:44.157 | DEBUG    | py2glsl.transpiler.analyzer:infer_type:162 - Inferring type for node: Constant(value=0.5)
2025-02-13 19:57:44.157 | DEBUG    | py2glsl.types.validation:validate_operation:31 - Validating operation: float * float
2025-02-13 19:57:44.157 | DEBUG    | py2glsl.types.validation:common_type:203 - Finding common type between float and float
2025-02-13 19:57:44.157 | DEBUG    | py2glsl.transpiler.analyzer:_infer_binary_operation:425 - Binary operation result type: float
2025-02-13 19:57:44.157 | DEBUG    | py2glsl.transpiler.analyzer:infer_type:162 - Inferring type for node: Constant(value=0.5)
2025-02-13 19:57:44.157 | DEBUG    | py2glsl.types.validation:validate_operation:31 - Validating operation: float + float
2025-02-13 19:57:44.157 | DEBUG    | py2glsl.types.validation:common_type:203 - Finding common type between float and float
2025-02-13 19:57:44.157 | DEBUG    | py2glsl.transpiler.analyzer:_infer_binary_operation:425 - Binary operation result type: float
2025-02-13 19:57:44.157 | DEBUG    | py2glsl.transpiler.analyzer:register_variable:816 - Registering variable pattern of type float
2025-02-13 19:57:44.157 | DEBUG    | py2glsl.transpiler.analyzer:analyze_statement:597 - Analyzing statement: Return(value=Call(func=Name(id='vec4', ctx=Load()), args=[Name(id='pattern', ctx=Load()), BinOp(left=Name(id='pattern', ctx=Load()), op=Mult(), right=Constant(value=0.5)), BinOp(left=Constant(value=1.0), op=Sub(), right=Name(id='pattern', ctx=Load())), Constant(value=1.0)]))
2025-02-13 19:57:44.157 | DEBUG    | py2glsl.transpiler.analyzer:infer_type:162 - Inferring type for node: Call(func=Name(id='vec4', ctx=Load()), args=[Name(id='pattern', ctx=Load()), BinOp(left=Name(id='pattern', ctx=Load()), op=Mult(), right=Constant(value=0.5)), BinOp(left=Constant(value=1.0), op=Sub(), right=Name(id='pattern', ctx=Load())), Constant(value=1.0)])
2025-02-13 19:57:44.157 | DEBUG    | py2glsl.transpiler.analyzer:infer_type:162 - Inferring type for node: Name(id='pattern', ctx=Load())
2025-02-13 19:57:44.157 | DEBUG    | py2glsl.transpiler.analyzer:infer_type:162 - Inferring type for node: BinOp(left=Name(id='pattern', ctx=Load()), op=Mult(), right=Constant(value=0.5))
2025-02-13 19:57:44.157 | DEBUG    | py2glsl.transpiler.analyzer:_infer_binary_operation:320 - Inferring binary operation: BinOp(left=Name(id='pattern', ctx=Load()), op=Mult(), right=Constant(value=0.5))
2025-02-13 19:57:44.157 | DEBUG    | py2glsl.transpiler.analyzer:infer_type:162 - Inferring type for node: Name(id='pattern', ctx=Load())
2025-02-13 19:57:44.157 | DEBUG    | py2glsl.transpiler.analyzer:infer_type:162 - Inferring type for node: Constant(value=0.5)
2025-02-13 19:57:44.157 | DEBUG    | py2glsl.types.validation:validate_operation:31 - Validating operation: float * float
2025-02-13 19:57:44.157 | DEBUG    | py2glsl.types.validation:common_type:203 - Finding common type between float and float
2025-02-13 19:57:44.157 | DEBUG    | py2glsl.transpiler.analyzer:_infer_binary_operation:425 - Binary operation result type: float
2025-02-13 19:57:44.157 | DEBUG    | py2glsl.transpiler.analyzer:infer_type:162 - Inferring type for node: BinOp(left=Constant(value=1.0), op=Sub(), right=Name(id='pattern', ctx=Load()))
2025-02-13 19:57:44.157 | DEBUG    | py2glsl.transpiler.analyzer:_infer_binary_operation:320 - Inferring binary operation: BinOp(left=Constant(value=1.0), op=Sub(), right=Name(id='pattern', ctx=Load()))
2025-02-13 19:57:44.157 | DEBUG    | py2glsl.transpiler.analyzer:infer_type:162 - Inferring type for node: Constant(value=1.0)
2025-02-13 19:57:44.157 | DEBUG    | py2glsl.transpiler.analyzer:infer_type:162 - Inferring type for node: Name(id='pattern', ctx=Load())
2025-02-13 19:57:44.157 | DEBUG    | py2glsl.types.validation:validate_operation:31 - Validating operation: float - float
2025-02-13 19:57:44.157 | DEBUG    | py2glsl.types.validation:common_type:203 - Finding common type between float and float
2025-02-13 19:57:44.157 | DEBUG    | py2glsl.transpiler.analyzer:_infer_binary_operation:425 - Binary operation result type: float
2025-02-13 19:57:44.157 | DEBUG    | py2glsl.transpiler.analyzer:infer_type:162 - Inferring type for node: Constant(value=1.0)
2025-02-13 19:57:44.157 | DEBUG    | py2glsl.types.validation:can_convert_to:174 - Checking conversion from vec4 to vec4
2025-02-13 19:57:44.157 | DEBUG    | py2glsl.transpiler.generator:generate:751 - Starting GLSL code generation
2025-02-13 19:57:44.157 | DEBUG    | py2glsl.types.validation:validate_operation:31 - Validating operation: vec2 * float
2025-02-13 19:57:44.157 | DEBUG    | py2glsl.types.validation:is_compatible_with:118 - Checking compatibility between vec2 and float
2025-02-13 19:57:44.157 | DEBUG    | py2glsl.types.validation:validate_operation:31 - Validating operation: vec2 - float
2025-02-13 19:57:44.157 | DEBUG    | py2glsl.types.validation:is_compatible_with:118 - Checking compatibility between vec2 and float
2025-02-13 19:57:44.157 | DEBUG    | py2glsl.types.validation:validate_operation:31 - Validating operation: vec2 * float
2025-02-13 19:57:44.157 | DEBUG    | py2glsl.types.validation:is_compatible_with:118 - Checking compatibility between vec2 and float
2025-02-13 19:57:44.157 | DEBUG    | py2glsl.types.validation:validate_operation:31 - Validating operation: vec2 - float
2025-02-13 19:57:44.157 | DEBUG    | py2glsl.types.validation:is_compatible_with:118 - Checking compatibility between vec2 and float
2025-02-13 19:57:44.157 | DEBUG    | py2glsl.types.validation:validate_operation:31 - Validating operation: vec2 * float
2025-02-13 19:57:44.158 | DEBUG    | py2glsl.types.validation:is_compatible_with:118 - Checking compatibility between vec2 and float
2025-02-13 19:57:44.158 | DEBUG    | py2glsl.types.validation:can_convert_to:174 - Checking conversion from vec2 to vec2
2025-02-13 19:57:44.158 | DEBUG    | py2glsl.types.base:validate_swizzle:216 - Validating swizzle: vec2.x
2025-02-13 19:57:44.158 | DEBUG    | py2glsl.types.base:validate_swizzle:234 - Component set: {'x'}
2025-02-13 19:57:44.158 | DEBUG    | py2glsl.types.base:__post_init__:116 - Validating GLSLType: float
2025-02-13 19:57:44.158 | DEBUG    | py2glsl.types.base:validate_swizzle:216 - Validating swizzle: vec2.x
2025-02-13 19:57:44.158 | DEBUG    | py2glsl.types.base:validate_swizzle:234 - Component set: {'x'}
2025-02-13 19:57:44.158 | DEBUG    | py2glsl.types.base:__post_init__:116 - Validating GLSLType: float
2025-02-13 19:57:44.158 | DEBUG    | py2glsl.types.validation:validate_operation:31 - Validating operation: float * float
2025-02-13 19:57:44.158 | DEBUG    | py2glsl.types.validation:common_type:203 - Finding common type between float and float
2025-02-13 19:57:44.158 | DEBUG    | py2glsl.types.base:validate_swizzle:216 - Validating swizzle: vec2.y
2025-02-13 19:57:44.158 | DEBUG    | py2glsl.types.base:validate_swizzle:234 - Component set: {'y'}
2025-02-13 19:57:44.158 | DEBUG    | py2glsl.types.base:__post_init__:116 - Validating GLSLType: float
2025-02-13 19:57:44.158 | DEBUG    | py2glsl.types.base:validate_swizzle:216 - Validating swizzle: vec2.y
2025-02-13 19:57:44.158 | DEBUG    | py2glsl.types.base:validate_swizzle:234 - Component set: {'y'}
2025-02-13 19:57:44.158 | DEBUG    | py2glsl.types.base:__post_init__:116 - Validating GLSLType: float
2025-02-13 19:57:44.158 | DEBUG    | py2glsl.types.validation:validate_operation:31 - Validating operation: float * float
2025-02-13 19:57:44.158 | DEBUG    | py2glsl.types.validation:common_type:203 - Finding common type between float and float
2025-02-13 19:57:44.158 | DEBUG    | py2glsl.types.validation:validate_operation:31 - Validating operation: float + float
2025-02-13 19:57:44.158 | DEBUG    | py2glsl.types.validation:common_type:203 - Finding common type between float and float
2025-02-13 19:57:44.158 | DEBUG    | py2glsl.types.base:validate_swizzle:216 - Validating swizzle: vec2.x
2025-02-13 19:57:44.158 | DEBUG    | py2glsl.types.base:validate_swizzle:234 - Component set: {'x'}
2025-02-13 19:57:44.158 | DEBUG    | py2glsl.types.base:__post_init__:116 - Validating GLSLType: float
2025-02-13 19:57:44.158 | DEBUG    | py2glsl.types.base:validate_swizzle:216 - Validating swizzle: vec2.x
2025-02-13 19:57:44.158 | DEBUG    | py2glsl.types.base:validate_swizzle:234 - Component set: {'x'}
2025-02-13 19:57:44.158 | DEBUG    | py2glsl.types.base:__post_init__:116 - Validating GLSLType: float
2025-02-13 19:57:44.158 | DEBUG    | py2glsl.types.validation:validate_operation:31 - Validating operation: float * float
2025-02-13 19:57:44.158 | DEBUG    | py2glsl.types.validation:common_type:203 - Finding common type between float and float
2025-02-13 19:57:44.158 | DEBUG    | py2glsl.types.base:validate_swizzle:216 - Validating swizzle: vec2.x
2025-02-13 19:57:44.158 | DEBUG    | py2glsl.types.base:validate_swizzle:234 - Component set: {'x'}
2025-02-13 19:57:44.158 | DEBUG    | py2glsl.types.base:__post_init__:116 - Validating GLSLType: float
2025-02-13 19:57:44.158 | DEBUG    | py2glsl.types.base:validate_swizzle:216 - Validating swizzle: vec2.x
2025-02-13 19:57:44.158 | DEBUG    | py2glsl.types.base:validate_swizzle:234 - Component set: {'x'}
2025-02-13 19:57:44.158 | DEBUG    | py2glsl.types.base:__post_init__:116 - Validating GLSLType: float
2025-02-13 19:57:44.158 | DEBUG    | py2glsl.types.base:validate_swizzle:216 - Validating swizzle: vec2.y
2025-02-13 19:57:44.158 | DEBUG    | py2glsl.types.base:validate_swizzle:234 - Component set: {'y'}
2025-02-13 19:57:44.158 | DEBUG    | py2glsl.types.base:__post_init__:116 - Validating GLSLType: float
2025-02-13 19:57:44.158 | DEBUG    | py2glsl.types.base:validate_swizzle:216 - Validating swizzle: vec2.y
2025-02-13 19:57:44.158 | DEBUG    | py2glsl.types.base:validate_swizzle:234 - Component set: {'y'}
2025-02-13 19:57:44.158 | DEBUG    | py2glsl.types.base:__post_init__:116 - Validating GLSLType: float
2025-02-13 19:57:44.158 | DEBUG    | py2glsl.types.validation:validate_operation:31 - Validating operation: float * float
2025-02-13 19:57:44.158 | DEBUG    | py2glsl.types.validation:common_type:203 - Finding common type between float and float
2025-02-13 19:57:44.158 | DEBUG    | py2glsl.types.base:validate_swizzle:216 - Validating swizzle: vec2.y
2025-02-13 19:57:44.158 | DEBUG    | py2glsl.types.base:validate_swizzle:234 - Component set: {'y'}
2025-02-13 19:57:44.158 | DEBUG    | py2glsl.types.base:__post_init__:116 - Validating GLSLType: float
2025-02-13 19:57:44.158 | DEBUG    | py2glsl.types.base:validate_swizzle:216 - Validating swizzle: vec2.y
2025-02-13 19:57:44.159 | DEBUG    | py2glsl.types.base:validate_swizzle:234 - Component set: {'y'}
2025-02-13 19:57:44.159 | DEBUG    | py2glsl.types.base:__post_init__:116 - Validating GLSLType: float
2025-02-13 19:57:44.159 | DEBUG    | py2glsl.types.validation:can_convert_to:174 - Checking conversion from float to float
2025-02-13 19:57:44.159 | DEBUG    | py2glsl.types.validation:validate_operation:31 - Validating operation: float * float
2025-02-13 19:57:44.159 | DEBUG    | py2glsl.types.validation:common_type:203 - Finding common type between float and float
2025-02-13 19:57:44.159 | DEBUG    | py2glsl.types.validation:validate_operation:31 - Validating operation: float + float
2025-02-13 19:57:44.159 | DEBUG    | py2glsl.types.validation:common_type:203 - Finding common type between float and float
2025-02-13 19:57:44.159 | DEBUG    | py2glsl.types.validation:validate_operation:31 - Validating operation: float * float
2025-02-13 19:57:44.159 | DEBUG    | py2glsl.types.validation:common_type:203 - Finding common type between float and float
2025-02-13 19:57:44.159 | DEBUG    | py2glsl.types.validation:validate_operation:31 - Validating operation: float + float
2025-02-13 19:57:44.159 | DEBUG    | py2glsl.types.validation:common_type:203 - Finding common type between float and float
2025-02-13 19:57:44.159 | DEBUG    | py2glsl.types.validation:validate_operation:31 - Validating operation: float * float
2025-02-13 19:57:44.159 | DEBUG    | py2glsl.types.validation:common_type:203 - Finding common type between float and float
2025-02-13 19:57:44.159 | DEBUG    | py2glsl.types.validation:validate_operation:31 - Validating operation: float * float
2025-02-13 19:57:44.159 | DEBUG    | py2glsl.types.validation:common_type:203 - Finding common type between float and float
2025-02-13 19:57:44.159 | DEBUG    | py2glsl.types.validation:validate_operation:31 - Validating operation: uniform float * float
2025-02-13 19:57:44.159 | DEBUG    | py2glsl.types.validation:common_type:203 - Finding common type between uniform float and float
2025-02-13 19:57:44.159 | DEBUG    | py2glsl.types.validation:is_compatible_with:118 - Checking compatibility between uniform float and float
2025-02-13 19:57:44.159 | DEBUG    | py2glsl.types.validation:validate_operation:31 - Validating operation: float - float
2025-02-13 19:57:44.159 | DEBUG    | py2glsl.types.validation:common_type:203 - Finding common type between float and float
2025-02-13 19:57:44.159 | DEBUG    | py2glsl.types.validation:validate_operation:31 - Validating operation: float * float
2025-02-13 19:57:44.159 | DEBUG    | py2glsl.types.validation:common_type:203 - Finding common type between float and float
2025-02-13 19:57:44.159 | DEBUG    | py2glsl.types.validation:validate_operation:31 - Validating operation: uniform float * float
2025-02-13 19:57:44.159 | DEBUG    | py2glsl.types.validation:common_type:203 - Finding common type between uniform float and float
2025-02-13 19:57:44.159 | DEBUG    | py2glsl.types.validation:is_compatible_with:118 - Checking compatibility between uniform float and float
2025-02-13 19:57:44.159 | DEBUG    | py2glsl.types.validation:can_convert_to:174 - Checking conversion from float to float
2025-02-13 19:57:44.159 | DEBUG    | py2glsl.types.validation:can_convert_to:174 - Checking conversion from vec4 to vec4
2025-02-13 19:57:44.159 | DEBUG    | py2glsl.transpiler.generator:_generate_call:275 - Generating call for function: vec4
2025-02-13 19:57:44.159 | DEBUG    | py2glsl.types.validation:validate_operation:31 - Validating operation: float * float
2025-02-13 19:57:44.159 | DEBUG    | py2glsl.types.validation:common_type:203 - Finding common type between float and float
2025-02-13 19:57:44.159 | DEBUG    | py2glsl.types.validation:validate_operation:31 - Validating operation: float - float
2025-02-13 19:57:44.159 | DEBUG    | py2glsl.types.validation:common_type:203 - Finding common type between float and float
2025-02-13 19:57:44.159 | DEBUG    | py2glsl.types.validation:validate_operation:31 - Validating operation: float * float
2025-02-13 19:57:44.159 | DEBUG    | py2glsl.types.validation:common_type:203 - Finding common type between float and float
2025-02-13 19:57:44.159 | DEBUG    | py2glsl.types.validation:validate_operation:31 - Validating operation: float - float
2025-02-13 19:57:44.159 | DEBUG    | py2glsl.types.validation:common_type:203 - Finding common type between float and float
2025-02-13 19:57:44.159 | DEBUG    | py2glsl.types.validation:validate_operation:31 - Validating operation: float * float
2025-02-13 19:57:44.159 | DEBUG    | py2glsl.types.validation:common_type:203 - Finding common type between float and float
2025-02-13 19:57:44.160 | DEBUG    | py2glsl.types.validation:validate_operation:31 - Validating operation: float - float
2025-02-13 19:57:44.160 | DEBUG    | py2glsl.types.validation:common_type:203 - Finding common type between float and float
___________________________ test_uniform_generation ____________________________

basic_analysis = <py2glsl.transpiler.analyzer.ShaderAnalysis object at 0x7f0a2aac17d0>

    def test_uniform_generation(basic_analysis):
        """Test uniform variable generation."""
        basic_analysis.uniforms = {
            "u_time": FLOAT,
            "u_aspect": FLOAT,
        }
    
        generator = GLSLGenerator(basic_analysis)
        result = generator.generate()
    
        assert "uniform float u_time;" in result.fragment_source
>       assert "uniform vec2 u_aspect;" in result.fragment_source
E       AssertionError: assert 'uniform vec2 u_aspect;' in '#version 460\n\nin vec2 vs_uv;\nout vec4 fs_color;\n\nuniform float u_aspect;\nuniform float u_time;\n'
E        +  where '#version 460\n\nin vec2 vs_uv;\nout vec4 fs_color;\n\nuniform float u_aspect;\nuniform float u_time;\n' = GeneratedShader(vertex_source='#version 460\nlayout(location = 0) in vec2 in_pos;\nlayout(location = 1) in vec2 in_uv;...'u_aspect': GLSLType(kind=<TypeKind.FLOAT: 4>, is_uniform=False, is_const=False, is_attribute=False, array_size=None)}).fragment_source

tests/transpiler/test_generator.py:206: AssertionError
----------------------------- Captured stderr call -----------------------------
2025-02-13 19:57:44.210 | DEBUG    | py2glsl.transpiler.generator:generate:751 - Starting GLSL code generation
=========================== short test summary info ============================
FAILED tests/render/test_buffers.py::test_invalid_program - _moderngl.Error: ...
FAILED tests/render/test_context.py::test_window_context_creation - TypeError...
FAILED tests/render/test_context.py::test_invalid_gl_version - Failed: DID NO...
FAILED tests/render/test_context.py::test_framebuffer_size - TypeError: 'tupl...
FAILED tests/render/test_context.py::test_custom_config - TypeError: GLConfig...
FAILED tests/shaders/test_basic_shaders.py::test_solid_color - KeyError: 'u_a...
FAILED tests/shaders/test_basic_shaders.py::test_uv_visualization - KeyError:...
FAILED tests/shaders/test_basic_shaders.py::test_animated_pattern - KeyError:...
FAILED tests/transpiler/test_generator.py::test_uniform_generation - Assertio...
=================== 9 failed, 91 passed, 1 xpassed in 0.84s ====================
